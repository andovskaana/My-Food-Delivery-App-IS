@using System.Globalization
@model IEnumerable<FoodDeliveryAna.Domain.DomainModels.Order>

@{
    ViewData["Title"] = "Your Orders";
    string Money(decimal v) => v.ToString("C", CultureInfo.CurrentCulture);
}

<style>
    :root {
        --brand-start: #7b5cff;
        --brand-end: #6a4cff;
        --brand: #6f4cff;
        --ink: #1f2328;
        --muted: #6b7280;
        --surface: #ffffff;
        --surface-2: #f6f7fb;
        --ring: rgba(111,76,255,.35);
    }

    .orders-hero {
        background: linear-gradient(135deg,var(--brand-start),var(--brand-end));
        color: #fff;
        border-radius: 1.25rem;
        padding: 1.25rem 1.25rem;
        margin-bottom: 1.25rem;
    }

    @@media (min-width:768px) {
        .orders-hero {
            padding: 1.75rem 2rem;
            margin-bottom: 1.5rem;
        }
    }

    .orders-hero h1 {
        margin: 0;
        font-weight: 700;
    }

    .orders-card {
        background: var(--surface);
        border-radius: 1rem;
        box-shadow: 0 6px 18px rgba(0,0,0,.06);
        overflow: hidden;
        border: 1px solid rgba(0,0,0,.05);
    }

    .orders-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

        .orders-table thead th {
            font-size: .85rem;
            font-weight: 600;
            letter-spacing: .02em;
            color: var(--muted);
            padding: .875rem 1rem;
            border-bottom: 1px solid rgba(0,0,0,.06);
            width: 100%;
            /* background: var(--surface-2); */
        }

        .orders-table tbody td {
            padding: 1rem;
            border-top: 1px solid rgba(0,0,0,.06);
            vertical-align: middle;
        }

        .orders-table tbody tr:first-child td {
            border-top: none;
        }

    .btn-brand {
        background: var(--brand);
        color: #fff;
        border: none;
        padding: .5rem .9rem;
        border-radius: .75rem;
        font-weight: 600;
        box-shadow: 0 8px 18px var(--ring);
    }

        .btn-brand:hover {
            filter: brightness(.97);
            color: #fff;
        }

    .chip {
        display: inline-flex;
        align-items: center;
        gap: .4rem;
        font-size: .8rem;
        font-weight: 600;
        color: var(--brand);
        background: rgba(111,76,255,.08);
        border: 1px solid rgba(111,76,255,.20);
        padding: .25rem .6rem;
        border-radius: 9999px;
    }

    /* Mobile: table -> stacked rows */
    @@media (max-width:640px) {
        .orders-table thead {
            display: none;
        }

        .orders-table tr {
            display: block;
            border-top: 1px solid rgba(0,0,0,.06);
        }

        .orders-table tbody td {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: none;
            padding: .75rem 1rem;
        }

            .orders-table tbody td[data-label]::before {
                content: attr(data-label);
                font-weight: 600;
                color: var(--muted);
                margin-right: 1rem;
            }

            .orders-table tbody td:last-child {
                padding-bottom: 1rem;
            }

        .orders-card {
            overflow: hidden;
        }
    }
</style>

<div class="orders-hero">
    <h1 class="h4 h3-md">Your Orders</h1>
    <div class="small opacity-75">Here's your recent order history.</div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="orders-card p-4">
        <div class="d-flex align-items-center gap-3">
            <div class="chip">No orders yet</div>
            <div class="text-muted">When you place an order, it will show up here.</div>
        </div>
        <div class="mt-3">
            <a asp-area="" asp-controller="Restaurants" asp-action="Index" class="btn btn-brand">Browse restaurants</a>
        </div>
    </div>
}
else
{
    <div class="orders-card">
        <table class="orders-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Total</th>
                    <th>Items</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var o in Model.OrderByDescending(x => x.CreatedAt))
                {
                    var itemCount = (o?.Items?.Sum(i => i.Quantity) ?? 0);
                    <tr>
                        <td data-label="Date">@o.CreatedAt.ToLocalTime().ToString("dd MMM yyyy HH:mm")</td>
                        <td data-label="Total" class="fw-semibold">@Money(o.Total)</td>
                        <td data-label="Items"><span class="chip">@itemCount</span></td>
                        <td class="text-end" data-label="Actions">
                            <div class="d-inline-flex gap-2">
                                <a class="btn btn-sm btn-outline-primary"
                                   asp-area=""
                                   asp-controller="Orders" asp-action="Track" asp-route-id="@o.Id">
                                    Track
                                </a>
                                <a class="btn btn-sm btn-outline-secondary"
                                   asp-area=""
                                   asp-controller="Orders" asp-action="Success" asp-route-id="@o.Id">
                                    View
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
